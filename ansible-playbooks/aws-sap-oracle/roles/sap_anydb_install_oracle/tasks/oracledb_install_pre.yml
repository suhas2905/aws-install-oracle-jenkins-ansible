---

# See further:
## oracle-database-preinstall-12cr1.rpm
## oracle-database-preinstall-12cr2.rpm
## oracle-database-preinstall-19c.rpm >> https://yum.oracle.com/repo/OracleLinux/OL8/appstream/x86_64/getPackage/oracle-database-preinstall-19c-1.0-2.el8.x86_64.rpm
#- name: Install C Shell (CSH), Korn Shell (KSH) and other dependencies for Oracle DB
#  ansible.builtin.package:
#    name:
#    - csh
#    - ksh
#    - mksh
#    - bc
#    - bind-utils
#    - gcc
#    - gcc-c++
#    - glibc-devel
#    - libcap
#    - libaio
#    - libaio-devel
#    - libgcc
#    - libstdc++
#    - libstdc++-devel
#    - make
#    - psmisc
#    - rdma-core-devel
#    - smartmontools
#    - sysstat
#    - unzip
#    - xorg-x11-utils
#    - xorg-x11-xauth
#    - unixODBC
#    - unixODBC-devel
#    - libnsl
#    state: present
#  notify: __sap_anydb_install_oracle_reboot_handler

# Removed Packages from RHEL 8.x
# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/considerations_in_adopting_rhel_8/index#removed-packages_changes-to-packages
#    - compat-libcap1
#    - compat-libstdc++-33


- name: Oracle DB - Create Linux User Groups
  become_user: root
  ansible.builtin.group:
    name: "{{ item.group }}"
    gid: "{{ item.gid }}"
    state: present
  loop:
    - { group: oinstall, gid: '4001' }
    - { group: dba, gid: '4002' }
    - { group: oper, gid: '4003' }
    - { group: oracle, gid: '4004' }
    - { group: sapsys, gid: '4005' } 
    - { group: sapinst, gid: '4006' }     
    
- name: Oracle DB - Create Linux Users
  become_user: root
  ansible.builtin.user:
    name: "{{ item.name }}"
    uid: "{{ item.uid }}"
    groups: "{{ item.groups }}"
    shell: "{{ item.shell }}"
    comment: "{{ item.comment }}"
    append: yes
    state: present
  with_items:
    - { name: 'oracle', uid: '1001', groups: 'oinstall,dba,oper', shell: '/bin/csh', comment: 'Oracle System Administrator' }
    - { name: 'sapadm', uid: '1003', groups: 'sapsys', shell: '/bin/csh', comment: 'SAP host agent Administrator' }
    - { name: 'sd1adm', uid: '1002', groups: 'sapsys,sapinst', shell: '/bin/csh', comment: 'SAP System Administrator' } 
    - { name: 'orasd1', uid: '1004', groups: 'sapsys,dba,oper', shell: '/bin/csh', comment: 'SAP System Administrator' } 

- name: Oracle DB - Create directories, from root user
  become_user: root
  ansible.builtin.file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: '0774'
  loop: 
    - { path: "{{ sap_anydb_install_oracle_base }}", owner: oracle, group: oinstall } #  Oracle Base directory
    - { path: "{{ sap_anydb_install_oracle_base }}/dvd/19.0.0", owner: oracle, group: oinstall } #  Oracle home image file path
    - { path: "{{ sap_anydb_install_oracle_base }}/{{ GLOBAL_ORACLE_SID }}/19.0.0", owner: oracle, group: oinstall } #  Oracle Home installation directory
    - { path: "{{ sap_anydb_install_oracle_inventory_central }}", owner: oracle, group: oracle } #  Oracle Central Inventory
    - { path: "{{ sap_anydb_install_oracle_base }}{{ sap_anydb_install_oracle_inventory_central }}", owner: oracle, group: oinstall } #  Oracle Inventory
    - { path: "{{ sap_anydb_install_oracle_filesystem_storage }}", owner: oracle, group: oinstall }
    - { path: /rman, owner: oracle, group: oinstall }
    - { path: /archivelog, owner: oracle, group: oinstall }
    
    
    
- name: Oracle DB - unarchived folder
  become_user: root
  ansible.builtin.file:
    state: directory
    path: "/sap-installation/oracle-installation/unarchived"
    mode: '0774'

- name: Download Oracle from S3 bucket
  shell: aws s3 sync {{ GLOBAL_S3_BUCKET_MEDIA_FILES }} {{ oracle_zip_folder }}
  register: download_output
  until: download_output is not failed
  retries: 5
  run_once: true

- name: Fail if no oracle file was found in the bucket
  stat:
    path: "{{ oracle_file_full_path }}"
  register: oracle_file_stat
  failed_when: not oracle_file_stat.stat.exists

- name: Check if the file was already unarchived
  stat:
    path: "{{ oracle_unarchived_folder }}/DATA_UNITS"
  register: oracle_folder_stat

- name: Unarchive Oracle file
  unarchive:
    src: "{{ oracle_file_full_path }}"
    remote_src: yes
    dest: "{{ oracle_unarchived_folder }}"
  #when: not oracle_folder_stat.stat.exists 
  
- name: Oracle DB - Copy installation media
  ansible.builtin.copy:
    remote_src: true
    directory_mode: true
    src: "{{ oracle_unarchived_folder }}/LINUX_X86_64/"
    dest: "{{ sap_anydb_install_oracle_base }}/dvd/19.0.0"
    owner: oracle
    group: oinstall
    mode: '0774'

# Requires change directory to Oracle RDBMS installation media directory
# Must extract to run the precheck
- name: Oracle DB - check installation prerequisites for Oracle DB
  become: true
  become_user: oracle
  args:
    executable: /bin/csh
    chdir: "{{ sap_anydb_install_oracle_base }}/dvd/19.0.0/"
  ansible.builtin.shell: |
    setenv CV_ASSUME_DISTID "OL7"
    setenv DISPLAY
    setenv DB_SID "{{ GLOBAL_ORACLE_SID }}"
    setenv ORACLE_BASE "{{ sap_anydb_install_oracle_base }}"
    setenv ORACLE_HOME "$ORACLE_BASE/$DB_SID/19.0.0"
    setenv ORA_GOLD_IMAGE_FILE "$ORACLE_BASE/dvd/19.0.0/db_home/SAP"
    cd $ORACLE_BASE/dvd/19.0.0/db_home/SAP
    ./RUNINSTALLER -ohverify -silent
    ./RUNINSTALLER -ohinstall -silent
  ignore_errors: true
  register: __sap_anydb_install_oracle_precheck  
#  args:
#    executable: /bin/csh
#    chdir: "$ORA_GOLD_IMAGE_FILE/"
#  ansible.builtin.shell: ./RUNINSTALLER -ohverify -silent   
#  when:
#   - sap_anydb_install_oracle_prep_precheck

# Avoid built-in file Ansible Module to install DB
- name: Oracle DB - check installation prerequisites for Oracle DB
  become: true
  become_user: root
  args:
    executable: /bin/csh
 #   chdir: "{{ sap_anydb_install_oracle_base }}/$DB_SID/19.0.0"
  ansible.builtin.shell: |
    setenv CV_ASSUME_DISTID "OL7"
    setenv DB_SID "{{ GLOBAL_ORACLE_SID }}"
    setenv ORACLE_BASE "{{ sap_anydb_install_oracle_base }}"
    setenv ORACLE_HOME "$ORACLE_BASE/$DB_SID/19.0.0"
    cd $ORACLE_HOME  
    ./root.sh
  register: __sap_anydb_install_oracle_precheck1
#- name: Oracle DB - install
#  become: true
#  become_user: root
#  ansible.builtin.shell: |
#    setenv ORACLE_HOME "$ORACLE_BASE/$DB_SID/19.0.0"
#    cd $ORACLE_HOME  
#    ./root.sh
    
    
    
#  when:
#    - sap_anydb_install_oracle_prep_precheck

#- name: Oracle DB - debug output
#  ansible.builtin.debug:
#    var: __sap_anydb_install_oracle_precheck.stdout_lines
#  when:
#    - sap_anydb_install_oracle_prep_precheck
